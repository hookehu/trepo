// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services.proto

#ifndef PROTOBUF_services_2eproto__INCLUDED
#define PROTOBUF_services_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace foo {
namespace bar {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_services_2eproto();
void protobuf_AssignDesc_services_2eproto();
void protobuf_ShutdownFile_services_2eproto();

class FooReq;
class FooResp;

// ===================================================================

class FooReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:foo.bar.FooReq) */ {
 public:
  FooReq();
  virtual ~FooReq();

  FooReq(const FooReq& from);

  inline FooReq& operator=(const FooReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FooReq& default_instance();

  void Swap(FooReq* other);

  // implements Message ----------------------------------------------

  inline FooReq* New() const { return New(NULL); }

  FooReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FooReq& from);
  void MergeFrom(const FooReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FooReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:foo.bar.FooReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_services_2eproto();
  friend void protobuf_AssignDesc_services_2eproto();
  friend void protobuf_ShutdownFile_services_2eproto();

  void InitAsDefaultInstance();
  static FooReq* default_instance_;
};
// -------------------------------------------------------------------

class FooResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:foo.bar.FooResp) */ {
 public:
  FooResp();
  virtual ~FooResp();

  FooResp(const FooResp& from);

  inline FooResp& operator=(const FooResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FooResp& default_instance();

  void Swap(FooResp* other);

  // implements Message ----------------------------------------------

  inline FooResp* New() const { return New(NULL); }

  FooResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FooResp& from);
  void MergeFrom(const FooResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FooResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:foo.bar.FooResp)
 private:
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 code_;
  friend void  protobuf_AddDesc_services_2eproto();
  friend void protobuf_AssignDesc_services_2eproto();
  friend void protobuf_ShutdownFile_services_2eproto();

  void InitAsDefaultInstance();
  static FooResp* default_instance_;
};
// ===================================================================

class Foo_Stub;

class Foo : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Foo() {};
 public:
  virtual ~Foo();

  typedef Foo_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Bar(::google::protobuf::RpcController* controller,
                       const ::foo::bar::FooReq* request,
                       ::foo::bar::FooResp* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Foo);
};

class Foo_Stub : public Foo {
 public:
  Foo_Stub(::google::protobuf::RpcChannel* channel);
  Foo_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Foo_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Foo ------------------------------------------

  void Bar(::google::protobuf::RpcController* controller,
                       const ::foo::bar::FooReq* request,
                       ::foo::bar::FooResp* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Foo_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// FooReq

// required int32 id = 1;
inline bool FooReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FooReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FooReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FooReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FooReq::id() const {
  // @@protoc_insertion_point(field_get:foo.bar.FooReq.id)
  return id_;
}
inline void FooReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:foo.bar.FooReq.id)
}

// -------------------------------------------------------------------

// FooResp

// required int32 code = 1;
inline bool FooResp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FooResp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FooResp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FooResp::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 FooResp::code() const {
  // @@protoc_insertion_point(field_get:foo.bar.FooResp.code)
  return code_;
}
inline void FooResp::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:foo.bar.FooResp.code)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace bar
}  // namespace foo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_services_2eproto__INCLUDED
